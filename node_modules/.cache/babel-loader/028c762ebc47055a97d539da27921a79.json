{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from '../actions';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === COUNT_CART_TOTALS) {\n    const {\n      amount,\n      subtotal\n    } = state.cart.reduce((acc, item) => {\n      acc.amount += item.amount;\n      acc.subtotal += item.amount * item.price;\n      return ac;\n    }, {\n      amount: 0,\n      subtotal: 0\n    });\n    return { ...state,\n      amount: amount,\n      total: subtotal\n    };\n  }\n\n  if (action.type === ADD_TO_CART) {\n    const id = action.payload.product.id;\n    const color = action.payload.color;\n    let flag = false;\n    let newProduct = [];\n    const product = state.cart;\n\n    for (let i = 0; i < product.length; i++) {\n      if (product[i].id === id && product[i].mainColor === color) {\n        flag = true;\n        break;\n      }\n    }\n\n    if (flag) {\n      newProduct = state.cart.map(product => {\n        if (product.id === id && product.mainColor === color) {\n          let newAmount = product.amount + action.payload.product.amount;\n\n          if (newAmount > product.stock) {\n            newAmount = product.stock;\n          }\n\n          return { ...product,\n            amount: newAmount\n          };\n        }\n\n        return product;\n      });\n    } else {\n      newProduct = state.cart.concat(action.payload.product);\n    }\n\n    return { ...state,\n      cart: newProduct\n    };\n  }\n\n  if (action.type === CLEAR_CART) {\n    return { ...state,\n      cart: [],\n      total: 0,\n      amount: 0,\n      shipping: 345\n    };\n  }\n\n  if (action.type === REMOVE_CART_ITEM) {\n    const id = action.payload.id;\n    const color = action.payload.color;\n    const newCart = state.cart.filter(item => {\n      return item.id !== id && item.color !== color;\n    });\n    return { ...state,\n      cart: newCart\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["/home/thanh/react-course-comfy-sloth-starter/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","amount","subtotal","cart","reduce","acc","item","price","ac","total","id","payload","product","color","flag","newProduct","i","length","mainColor","map","newAmount","stock","concat","shipping","newCart","filter","Error"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from '../actions';\n\nconst cart_reducer = (state, action) => {\n  if (action.type === COUNT_CART_TOTALS) {\n    const { amount, subtotal } = state.cart.reduce(\n      (acc, item) => {\n        acc.amount += item.amount;\n        acc.subtotal += item.amount * item.price;\n        return ac;\n      },\n      {\n        amount: 0,\n        subtotal: 0,\n      }\n    );\n    return { ...state, amount: amount, total: subtotal };\n  }\n  if (action.type === ADD_TO_CART) {\n    const id = action.payload.product.id;\n    const color = action.payload.color;\n    let flag = false;\n    let newProduct = [];\n    const product = state.cart;\n    for (let i = 0; i < product.length; i++) {\n      if (product[i].id === id && product[i].mainColor === color) {\n        flag = true;\n        break;\n      }\n    }\n    if (flag) {\n      newProduct = state.cart.map((product) => {\n        if (product.id === id && product.mainColor === color) {\n          let newAmount = product.amount + action.payload.product.amount;\n          if (newAmount > product.stock) {\n            newAmount = product.stock;\n          }\n          return {\n            ...product,\n            amount: newAmount,\n          };\n        }\n        return product;\n      });\n    } else {\n      newProduct = state.cart.concat(action.payload.product);\n    }\n\n    return { ...state, cart: newProduct };\n  }\n  if (action.type === CLEAR_CART) {\n    return { ...state, cart: [], total: 0, amount: 0, shipping: 345 };\n  }\n  if (action.type === REMOVE_CART_ITEM) {\n    const id = action.payload.id;\n\n    const color = action.payload.color;\n\n    const newCart = state.cart.filter((item) => {\n      return item.id !== id && item.color !== color;\n    });\n    return { ...state, cart: newCart };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;\n"]},"metadata":{},"sourceType":"module"}