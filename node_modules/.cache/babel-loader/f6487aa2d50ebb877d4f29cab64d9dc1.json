{"ast":null,"code":"var _jsxFileName = \"/home/thanh/react-course-comfy-sloth-starter/src/context/filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport { LOAD_PRODUCTS, SET_GRIDVIEW, SET_LISTVIEW, UPDATE_SORT, SORT_PRODUCTS, UPDATE_FILTERS, FILTER_PRODUCTS, CLEAR_FILTERS } from '../actions';\nimport { useProductsContext } from './products_context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  filterProducts: [],\n  products: [],\n  view: 'GRID',\n  sortOption: '',\n  filterValue: {\n    text: '',\n    company: 'ALL',\n    category: 'ALL',\n    colors: 'ALL',\n    shipping: false,\n    minPrice: 0,\n    maxPrice: 0,\n    price: 0\n  }\n};\nconst FilterContext = /*#__PURE__*/React.createContext();\nexport const FilterProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    products\n  } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const changeView = value => {\n    if (value === 'GRID' && state.view === 'LIST') {\n      dispatch({\n        type: SET_GRIDVIEW\n      });\n    }\n\n    if (value === 'LIST' && state.view === 'GRID') {\n      dispatch({\n        type: SET_LISTVIEW\n      });\n    }\n  };\n\n  const handleSortChange = e => {\n    const option = e.target.value;\n    dispatch({\n      type: UPDATE_SORT,\n      payload: option\n    });\n  };\n\n  const handleFilterChange = e => {\n    const name = e.target.name;\n    let value = e.target.value;\n\n    if (name === 'category') {\n      value = e.target.textContent;\n    }\n\n    if (name === 'shipping') {\n      value = e.target.checked;\n    }\n\n    if (name === 'colors') {\n      value = e.target.getAttribute('data-color');\n    }\n\n    dispatch({\n      type: UPDATE_FILTERS,\n      payload: {\n        name,\n        value\n      }\n    });\n  };\n\n  const clearFilters = () => {\n    dispatch({\n      type: CLEAR_FILTERS\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_PRODUCTS,\n      payload: products\n    });\n  }, [products]);\n  useEffect(() => {\n    dispatch({\n      type: SORT_PRODUCTS\n    });\n  }, [state.sortOption, products]);\n  useEffect(() => {\n    dispatch({\n      type: FILTER_PRODUCTS\n    });\n  }, [state.filterValue]);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      changeView,\n      handleSortChange,\n      handleFilterChange,\n      clearFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(FilterProvider, \"K/3iyz4fADjKbvssYgGMBLW0+qM=\", false, function () {\n  return [useProductsContext];\n});\n\n_c = FilterProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["/home/thanh/react-course-comfy-sloth-starter/src/context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filterProducts","products","view","sortOption","filterValue","text","company","category","colors","shipping","minPrice","maxPrice","price","FilterContext","createContext","FilterProvider","children","state","dispatch","changeView","value","type","handleSortChange","e","option","target","payload","handleFilterChange","name","textContent","checked","getAttribute","clearFilters","useFilterContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/filter_reducer';\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions';\nimport { useProductsContext } from './products_context';\n\nconst initialState = {\n  filterProducts: [],\n  products: [],\n  view: 'GRID',\n  sortOption: '',\n  filterValue: {\n    text: '',\n    company: 'ALL',\n    category: 'ALL',\n    colors: 'ALL',\n    shipping: false,\n    minPrice: 0,\n    maxPrice: 0,\n    price: 0,\n  },\n};\n\nconst FilterContext = React.createContext();\n\nexport const FilterProvider = ({ children }) => {\n  const { products } = useProductsContext();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const changeView = (value) => {\n    if (value === 'GRID' && state.view === 'LIST') {\n      dispatch({ type: SET_GRIDVIEW });\n    }\n    if (value === 'LIST' && state.view === 'GRID') {\n      dispatch({ type: SET_LISTVIEW });\n    }\n  };\n  const handleSortChange = (e) => {\n    const option = e.target.value;\n    dispatch({ type: UPDATE_SORT, payload: option });\n  };\n  const handleFilterChange = (e) => {\n    const name = e.target.name;\n    let value = e.target.value;\n    if (name === 'category') {\n      value = e.target.textContent;\n    }\n    if (name === 'shipping') {\n      value = e.target.checked;\n    }\n    if (name === 'colors') {\n      value = e.target.getAttribute('data-color');\n    }\n    dispatch({ type: UPDATE_FILTERS, payload: { name, value } });\n  };\n  const clearFilters = () => {\n    dispatch({ type: CLEAR_FILTERS });\n  };\n  useEffect(() => {\n    dispatch({ type: LOAD_PRODUCTS, payload: products });\n  }, [products]);\n  useEffect(() => {\n    dispatch({ type: SORT_PRODUCTS });\n  }, [state.sortOption, products]);\n  useEffect(() => {\n    dispatch({ type: FILTER_PRODUCTS });\n  }, [state.filterValue]);\n  return (\n    <FilterContext.Provider\n      value={{\n        ...state,\n        changeView,\n        handleSortChange,\n        handleFilterChange,\n        clearFilters,\n      }}\n    >\n      {children}\n    </FilterContext.Provider>\n  );\n};\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext);\n};\n"]},"metadata":{},"sourceType":"module"}